public class Array {
	private int[] items;
	public int count;
	Array(int size){
		items = new int[size];
	}
	
	private void resizeArrayIfRequired(){
		if(items.length == count){
			int[] tempArray = new int[count*2];
			for(int i = 0; i < count; i++){
				tempArray[i] = items[i];
			}
			items = tempArray;
		}
		else{
			// do nothing
		}
	}
	
	private void isValidIndex(int index){
		if(index < 0 || index >= count){
			throw new IllegalArgumentException();
		}
		else{
			// do nothing
		}
	}
	
	private void isValidIndexToRemove(int index){
		if(index <= 0 || index >= count){
			throw new IllegalArgumentException();
		}
		else{
			// do nothing
		}
	}
	
	public void insert(int item){
		resizeArrayIfRequired();
		items[count++] = item;
	}
	
	public void insert(int item, int index){
		isValidIndex(index);
		resizeArrayIfRequired();
		for(int i = count-1; i >= index; i--){
			items[i+1] = items[i];
		}
		items[index] = item;
		count++;
	}
	
	public void remove(){
		isValidIndexToRemove(count);
		items[count-1] = 0;
		count--;
	}
	
	public void remove(int index){
		isValidIndexToRemove(index);
		for(int i = index; i < items.length-1; i++){
			items[i] = items[i+1];
		}
		count--;
	}
	
	public int indexOf(int item){
		if(count == 0) return -1;
		for(int i = 0; i < count; i++){
			if(items[i] == item){
				return i;
			}
		}
		return -1;
	}
	
	public void print(){
		for(int i = 0; i < count; i++){
			System.out.print(items[i] + " ");
		}
		System.out.println();
	}
	
	public Array Intersection(Array arr){
		Array res = new Array(arr.count);
		for(int number : items){
			if(arr.indexOf(number) >= 0){
				res.insert(number);
			}
		}
		return res;
	}
	
	public int max(){
		int max = Integer.MIN_VALUE;
		for(int number : items){
			if(number > max){
				max = number;
			}
		}
		return max;
	}
	
	public int min(){
		int min = Integer.MAX_VALUE;
		for(int number : items){
			if(number < min){
				min = number;
			}
		}
		return min;
	}
	
	public void reverse(){
		int[] tempArray = new int[count];
		for(int i = 0, j = count-1-i; i < count; i++,j--){
			tempArray[i] = items[j];
		}
		items = tempArray;
	}
	
	
}
